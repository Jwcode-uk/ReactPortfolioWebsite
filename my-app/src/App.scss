.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
img.rounded-corners {
  border-radius: 25px;
}
img.rounded-corners-top {
  border-top-left-radius: 25px;
  border-top-right-radius: 25px;
}
.header-image {
  background-color: #282c34;
  width: 100%;
  height: auto;
  align-items: center;
  justify-content: center;
  font-size: 7vw;
  color: white;

  background-image: linear-gradient(rgba(0, 0, 0, 0.29), rgba(0, 0, 0, 0.59)),
    url("img/background.jpg");
  height: 50%;
  width: 100%;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}
.is-outlined {
  background-color: transparent;
  color: #fff;
}
.hero-cta {
  padding: 30px 0;
}
.column {
  margin: 10px;
}
.card {
  height: max-content;
  align-self: center;
}

.cardContainer {
  max-width: 600px;
  align-self: center;
}

.cardGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(275px, 1fr));
  grid-gap: 0.5em;
}

.card {
  height: max-content;
  transition-timing-function: ease-in;

  /* Quick on the way out */
  transition: 0.5s;

  /* Hide thing by pushing it outside by default */
  transform: scale(1);
  border-radius: 25px;
}
.card-image {
  border-radius: 25px;
}
#rounded {
  border-radius: 25px;

  padding: 20px;
}

.card:hover {
  /* This timing applies on the way IN */
  transition-timing-function: ease-out;

  /* A litttttle slower on the way in */
  transition: 0.5s;

  /* Move into place */
  transform: scale(1.1);

  z-index: 1000; /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */
}
@media screen and (max-width: 600px) {
  #tweet {
    visibility: hidden;
    clear: both;
    float: left;
    margin: 10px auto 5px 20px;
    width: 28%;
    display: none;
  }
}
.ReactModal__Html--open,
.ReactModal__Body--open {
  overflow: hidden; /* prevents background page from scrolling when the modal is open */
}

.ReactModal__Overlay {
  position: fixed;
  z-index: 999999;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.ReactModal__Content {
  background: white;
  width: 80rem;
  max-width: calc(100vw - 1rem);
  max-height: calc(100vh - 2rem);
  overflow-y: auto;
  position: relative;
}

.modal-close-btn {
  cursor: pointer;
  top: 1.5rem;
  right: 1.5rem;
  position: absolute;
  width: 3rem;
  height: 3rem;
}
